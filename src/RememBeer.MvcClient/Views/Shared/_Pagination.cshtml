@using RememBeer.MvcClient.Helpers
@model RememBeer.MvcClient.Models.Shared.IPagination

<div class="center-align">
        @{
            var controller = ViewContext.RouteData.GetRequiredString("controller");
            var action = ViewContext.RouteData.GetRequiredString("action");
            var area = ViewContext.RouteData.DataTokens["area"];
        }
        @{
            var totalPages = (int)Math.Ceiling((decimal)Model.TotalCount / (decimal)(Model.PageSize == 0 ? 1 : Model.PageSize));
            var currentPage = Model.CurrentPage;
            var startPage = currentPage - 5;
            var endPage = currentPage + 4;
            if (startPage <= 0)
            {
                endPage -= (startPage - 1);
                startPage = 1;
            }
            if (endPage > totalPages)
            {
                endPage = totalPages;
                if (endPage > 10)
                {
                    startPage = endPage - 9;
                }
            }
        }
        @if (endPage > 1)
        {
            <ul class="pagination">
                @if (currentPage > 0)
                {
                    <li class="waves-effect">
                        @Ajax.PageRefreshActionLink("Previous", "", action, controller, new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, area = area, searchPattern = Request.QueryString["searchPattern"] })
                    </li>
                }

                @for (var page = startPage - 1; page < endPage; page++)
                {
                    <li class="@(page == currentPage ? "active" : "") btn-flat">
                        @Ajax.PageRefreshActionLink((page + 1).ToString(), "", action, controller, new { page = page, pageSize = Model.PageSize, area = area, searchPattern = Request.QueryString["searchPattern"] })
                    </li>
                }

                @if (currentPage < totalPages - 1)
                {
                    <li class="waves-effect">
                        @Ajax.PageRefreshActionLink("Next", "", action, controller, new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, area = area, searchPattern = Request.QueryString["searchPattern"] })
                    </li>
                }
            </ul>
        }

    <script>
        $(".pagination").on(
            "click",
            function(ev) {
                var $target = $(ev.target);
                if ($target.is("a")) {
                    var href = $target.attr("href");
                    history.pushState({}, "", href);
                }
            });
    </script>
</div>